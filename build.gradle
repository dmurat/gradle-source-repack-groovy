import org.apache.tools.ant.filters.ReplaceTokens
import org.gradle.internal.deprecation.DeprecatableConfiguration

plugins {
  id("groovy")
  id("com.github.johnrengelman.shadow") version "6.1.0"
  id("io.micronaut.application") version "1.2.0"
}

version "0.1.0"
group "org.klokwrk.tools"

repositories {
  mavenCentral()
  jcenter()
}

micronaut {
  testRuntime("spock2")
  enableNativeImage(false)
  processing {
    incremental(true)
    annotations("org.klokwrk.tools.gradle.source.repack.*")
  }
}

application {
  mainClass.set("org.klokwrk.tools.gradle.source.repack.GradleSourceRepackCommand")
}

java {
  sourceCompatibility = JavaVersion.toVersion("11")
  targetCompatibility = JavaVersion.toVersion("11")
}

processResources {
  filteringCharset = "UTF-8"

  // Processes resources/version.properties and replaces tokens with provided values.
  filter(ReplaceTokens, tokens: [moduleName: project.name, moduleVersion: project.version])
}

configurations {
  graalNativeImageDependencies
}

dependencies {
  implementation platform("org.codehaus.groovy:groovy-bom:3.0.6")

  graalNativeImageDependencies("io.github.classgraph:classgraph:4.8.90")

  compileOnly("info.picocli:picocli-codegen:4.2.0")
  compileOnly("org.graalvm.nativeimage:svm")
  compileOnly("io.github.classgraph:classgraph:4.8.90")

  implementation("info.picocli:picocli")
  implementation("io.micronaut:micronaut-validation")
  implementation("io.micronaut:micronaut-http-client")
  implementation("io.micronaut.groovy:micronaut-runtime-groovy")
  implementation("io.micronaut.picocli:micronaut-picocli")
  implementation("javax.annotation:javax.annotation-api")

  runtimeOnly("ch.qos.logback:logback-classic")
}

// Simple custom graal image builder task used because of some bugs in Micronaut task.
// Can be replaced by Micronaut one when at least the first of the following bugs is fixed:
// - https://github.com/micronaut-projects/micronaut-gradle-plugin/issues/92
// - https://github.com/micronaut-projects/micronaut-gradle-plugin/issues/93
//
// In addition there is also an issue with missing resources in Micronaut task that causes native image build failing in the presence of both java and groovy source sets. Didn't reported that yet,
// but I guess it will not get much attention since native image for Groovy is not supported.
tasks.register("kwrkNativeImage", Exec) { Exec thisExecTask ->
  String nativeImageBuilderClasspath = null
  project.configurations { ConfigurationContainer configurationContainer ->
    Set<Configuration> filteredConfigurations = configurationContainer
        .findAll({ Configuration configuration ->
          if (configuration instanceof DeprecatableConfiguration) {
            DeprecatableConfiguration deprecatableConfiguration = (DeprecatableConfiguration) configuration
            if (deprecatableConfiguration.resolutionAlternatives != null) {
              return false
            }
          }

          return true
        })
        .findAll { Configuration configuration ->
          return configuration.canBeResolved
        }
        .findAll({ Configuration configuration ->
          return ["runtimeClasspath", "graalNativeImageDependencies"].contains(configuration.name)
        })

    Set<File> resolvedDependencies = filteredConfigurations.collectMany { Configuration configuration -> configuration.resolve() }

    SourceSet mainSourceSet = project.sourceSets.getByName(SourceSet.MAIN_SOURCE_SET_NAME)
    FileCollection outputDirs = mainSourceSet.getOutput().getClassesDirs().filter({ File file -> file.exists() })
    File resourcesDir = mainSourceSet.getOutput().getResourcesDir()

    //noinspection GroovyAssignabilityCheck
    nativeImageBuilderClasspath = project.files(resolvedDependencies, outputDirs, resourcesDir).asPath

    return
  }

  File workingDir = new File(project.buildDir, "native-image")
  workingDir.mkdirs()

  JavaApplication javaApplication = project.extensions.getByType(JavaApplication)
  String mainClass = javaApplication.getMainClass().get()

  File mainGraalSourceSetDir = new File(project.projectDir, "src/main/graal")

  thisExecTask.setExecutable("native-image")
  thisExecTask.setWorkingDir(workingDir)
  thisExecTask.setArgs([
      "--verbose",
      "--class-path=$nativeImageBuilderClasspath",
      "--allow-incomplete-classpath",
      "--report-unsupported-elements-at-runtime",
      "--initialize-at-build-time",
      "--initialize-at-run-time=org.codehaus.groovy.control.XStreamUtils,groovy.grape.GrapeIvy",
      "--no-fallback",
      "--no-server",
      "-H:ConfigurationFileDirectories=${ mainGraalSourceSetDir.absolutePath }",
      "-H:+ReportExceptionStackTraces",
      "-H:Path=${ workingDir.absolutePath }",
      "-H:Class=${ mainClass }",
      "-H:Name=${ project.name }"]
  )
}
